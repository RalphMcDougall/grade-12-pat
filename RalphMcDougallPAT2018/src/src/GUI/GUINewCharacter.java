/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package src.GUI;

import java.sql.SQLException;
import javax.swing.JOptionPane;
import src.Main.GameHandler;
import src.Utility.GameLogger;
import src.Player.User;

/**
 * The GUI where the user can make a new character
 * 
 * @author Ralph McDougall 14/4/2018
 */
public class GUINewCharacter extends javax.swing.JFrame {
    // *****************************************************
    // PRIVATE FIELDS
    // *****************************************************
    
    // The length of the longest possible name that the user can choose
    private final int MAX_NAME_LENGTH = 20; 
    
    // The amounts that the stats change by every step
    private final int HEALTH_CHANGE = 10;
    private final int DAMAGE_CHANGE = 1;
    private final int FIRE_RATE_CHANGE = 1;
    private final int SPEED_CHANGE = 1;
    
    // The minimum value that each stat can take
    private final int MIN_HEALTH = 10;
    private final int MIN_DAMAGE = 1;
    private final int MIN_FIRE_RATE = 1;
    private final int MIN_SPEED = 1;
    
    // The current values
    private int availableSkillPoints = 5;
    private int health = 20;
    private int damage = 10;
    private int fireRate = 10;
    private int speed = 8;
    
    // *****************************************************
    // CONSTRUCTOR
    // *****************************************************
    
    /**
     * Initialise the components of the New Character GUI
     */
    public GUINewCharacter() {
        GameLogger.logInfo("Initialising GUINewCharacter.");
        initComponents();
        setLocationRelativeTo(null);
        
        updateLabels();
    }

    // *****************************************************
    // PRIVATE METHODS
    // *****************************************************
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlBackground = new javax.swing.JPanel();
        pnlTitle = new javax.swing.JPanel();
        lblTitle = new javax.swing.JLabel();
        lblScreenDescription = new javax.swing.JLabel();
        pnlDetails = new javax.swing.JPanel();
        pnlName = new javax.swing.JPanel();
        lblName = new javax.swing.JLabel();
        txtfldName = new javax.swing.JTextField();
        pnlHealth = new javax.swing.JPanel();
        lblHealth = new javax.swing.JLabel();
        lblCurrentHealth = new javax.swing.JLabel();
        btnHealthMinus = new javax.swing.JButton();
        btnHealthPlus = new javax.swing.JButton();
        pnlDamage = new javax.swing.JPanel();
        lblDamage = new javax.swing.JLabel();
        lblCurrentDamage = new javax.swing.JLabel();
        btnDamageMinus = new javax.swing.JButton();
        btnDamagePlus = new javax.swing.JButton();
        pnlFireRate = new javax.swing.JPanel();
        lblFireRate = new javax.swing.JLabel();
        lblCurrentFireRate = new javax.swing.JLabel();
        btnFireRateMinus = new javax.swing.JButton();
        btnFireRatePlus = new javax.swing.JButton();
        pnlSpeed = new javax.swing.JPanel();
        lblSpeed = new javax.swing.JLabel();
        lblCurrentSpeed = new javax.swing.JLabel();
        btnSpeedMinus = new javax.swing.JButton();
        btnSpeedPlus = new javax.swing.JButton();
        pnlAvailableSkillPoints = new javax.swing.JPanel();
        lblSkillPoints = new javax.swing.JLabel();
        lblCurrentSkillPointsVal = new javax.swing.JLabel();
        pnlButtons = new javax.swing.JPanel();
        btnContinue = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        lblBackgroundImage = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(800, 600));
        setMinimumSize(new java.awt.Dimension(800, 600));
        setResizable(false);

        pnlBackground.setBackground(new java.awt.Color(0, 0, 153));
        pnlBackground.setMaximumSize(new java.awt.Dimension(800, 600));
        pnlBackground.setMinimumSize(new java.awt.Dimension(800, 600));
        pnlBackground.setPreferredSize(new java.awt.Dimension(800, 600));
        pnlBackground.setLayout(null);

        pnlTitle.setBackground(new java.awt.Color(215, 215, 215));
        pnlTitle.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 153), 5));

        lblTitle.setFont(new java.awt.Font("Arial", 1, 72)); // NOI18N
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("Dungeon Swarm");

        lblScreenDescription.setFont(new java.awt.Font("Arial", 0, 48)); // NOI18N
        lblScreenDescription.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblScreenDescription.setText("New Character");

        javax.swing.GroupLayout pnlTitleLayout = new javax.swing.GroupLayout(pnlTitle);
        pnlTitle.setLayout(pnlTitleLayout);
        pnlTitleLayout.setHorizontalGroup(
            pnlTitleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTitleLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlTitleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 708, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblScreenDescription, javax.swing.GroupLayout.PREFERRED_SIZE, 708, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlTitleLayout.setVerticalGroup(
            pnlTitleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTitleLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblScreenDescription, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pnlBackground.add(pnlTitle);
        pnlTitle.setBounds(30, 10, 730, 170);

        pnlDetails.setBackground(new java.awt.Color(215, 215, 215));
        pnlDetails.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 153), 5));

        pnlName.setBackground(new java.awt.Color(222, 222, 222));

        lblName.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        lblName.setText("Name:");

        txtfldName.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N

        javax.swing.GroupLayout pnlNameLayout = new javax.swing.GroupLayout(pnlName);
        pnlName.setLayout(pnlNameLayout);
        pnlNameLayout.setHorizontalGroup(
            pnlNameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlNameLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblName)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtfldName, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlNameLayout.setVerticalGroup(
            pnlNameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlNameLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnlNameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblName, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtfldName))
                .addContainerGap())
        );

        pnlHealth.setBackground(new java.awt.Color(222, 222, 222));

        lblHealth.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        lblHealth.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblHealth.setText("Health: ");

        lblCurrentHealth.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        lblCurrentHealth.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblCurrentHealth.setText("100");
        lblCurrentHealth.setMaximumSize(new java.awt.Dimension(26, 29));
        lblCurrentHealth.setMinimumSize(new java.awt.Dimension(26, 29));
        lblCurrentHealth.setPreferredSize(new java.awt.Dimension(26, 29));

        btnHealthMinus.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        btnHealthMinus.setText("-");
        btnHealthMinus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHealthMinusActionPerformed(evt);
            }
        });

        btnHealthPlus.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        btnHealthPlus.setText("+");
        btnHealthPlus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHealthPlusActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlHealthLayout = new javax.swing.GroupLayout(pnlHealth);
        pnlHealth.setLayout(pnlHealthLayout);
        pnlHealthLayout.setHorizontalGroup(
            pnlHealthLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlHealthLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblHealth, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblCurrentHealth, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(btnHealthMinus)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnHealthPlus)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlHealthLayout.setVerticalGroup(
            pnlHealthLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlHealthLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlHealthLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnHealthPlus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnHealthMinus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblCurrentHealth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblHealth)))
        );

        pnlDamage.setBackground(new java.awt.Color(222, 222, 222));

        lblDamage.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        lblDamage.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblDamage.setText("Damage: ");

        lblCurrentDamage.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        lblCurrentDamage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblCurrentDamage.setText("10");

        btnDamageMinus.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        btnDamageMinus.setText("-");
        btnDamageMinus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDamageMinusActionPerformed(evt);
            }
        });

        btnDamagePlus.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        btnDamagePlus.setText("+");
        btnDamagePlus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDamagePlusActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlDamageLayout = new javax.swing.GroupLayout(pnlDamage);
        pnlDamage.setLayout(pnlDamageLayout);
        pnlDamageLayout.setHorizontalGroup(
            pnlDamageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDamageLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblDamage, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblCurrentDamage, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnDamageMinus)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnDamagePlus)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlDamageLayout.setVerticalGroup(
            pnlDamageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDamageLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlDamageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDamagePlus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnDamageMinus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblCurrentDamage)
                    .addComponent(lblDamage)))
        );

        pnlFireRate.setBackground(new java.awt.Color(222, 222, 222));

        lblFireRate.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        lblFireRate.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblFireRate.setText("Fire Rate: ");

        lblCurrentFireRate.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        lblCurrentFireRate.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblCurrentFireRate.setText("5");

        btnFireRateMinus.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        btnFireRateMinus.setText("-");
        btnFireRateMinus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFireRateMinusActionPerformed(evt);
            }
        });

        btnFireRatePlus.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        btnFireRatePlus.setText("+");
        btnFireRatePlus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFireRatePlusActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlFireRateLayout = new javax.swing.GroupLayout(pnlFireRate);
        pnlFireRate.setLayout(pnlFireRateLayout);
        pnlFireRateLayout.setHorizontalGroup(
            pnlFireRateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFireRateLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblFireRate, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblCurrentFireRate, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnFireRateMinus)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnFireRatePlus)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlFireRateLayout.setVerticalGroup(
            pnlFireRateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFireRateLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlFireRateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnFireRatePlus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnFireRateMinus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblCurrentFireRate)
                    .addComponent(lblFireRate)))
        );

        pnlSpeed.setBackground(new java.awt.Color(222, 222, 222));

        lblSpeed.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        lblSpeed.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblSpeed.setText("Speed: ");

        lblCurrentSpeed.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        lblCurrentSpeed.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblCurrentSpeed.setText("5");

        btnSpeedMinus.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        btnSpeedMinus.setText("-");
        btnSpeedMinus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSpeedMinusActionPerformed(evt);
            }
        });

        btnSpeedPlus.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        btnSpeedPlus.setText("+");
        btnSpeedPlus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSpeedPlusActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlSpeedLayout = new javax.swing.GroupLayout(pnlSpeed);
        pnlSpeed.setLayout(pnlSpeedLayout);
        pnlSpeedLayout.setHorizontalGroup(
            pnlSpeedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSpeedLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblSpeed, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblCurrentSpeed, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnSpeedMinus)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSpeedPlus)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlSpeedLayout.setVerticalGroup(
            pnlSpeedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSpeedLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlSpeedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSpeedPlus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnSpeedMinus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblCurrentSpeed)
                    .addComponent(lblSpeed)))
        );

        pnlAvailableSkillPoints.setBackground(new java.awt.Color(222, 222, 222));

        lblSkillPoints.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        lblSkillPoints.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblSkillPoints.setText("Skill points available: ");

        lblCurrentSkillPointsVal.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        lblCurrentSkillPointsVal.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblCurrentSkillPointsVal.setText("5");

        javax.swing.GroupLayout pnlAvailableSkillPointsLayout = new javax.swing.GroupLayout(pnlAvailableSkillPoints);
        pnlAvailableSkillPoints.setLayout(pnlAvailableSkillPointsLayout);
        pnlAvailableSkillPointsLayout.setHorizontalGroup(
            pnlAvailableSkillPointsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAvailableSkillPointsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblSkillPoints, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblCurrentSkillPointsVal, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlAvailableSkillPointsLayout.setVerticalGroup(
            pnlAvailableSkillPointsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAvailableSkillPointsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlAvailableSkillPointsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSkillPoints)
                    .addComponent(lblCurrentSkillPointsVal))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pnlDetailsLayout = new javax.swing.GroupLayout(pnlDetails);
        pnlDetails.setLayout(pnlDetailsLayout);
        pnlDetailsLayout.setHorizontalGroup(
            pnlDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDetailsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlSpeed, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlFireRate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlDamage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlHealth, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlAvailableSkillPoints, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(51, 51, 51))
        );
        pnlDetailsLayout.setVerticalGroup(
            pnlDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDetailsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlName, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pnlAvailableSkillPoints, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlHealth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlDamage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlFireRate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlSpeed, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlBackground.add(pnlDetails);
        pnlDetails.setBounds(10, 190, 480, 380);

        pnlButtons.setBackground(new java.awt.Color(215, 215, 215));
        pnlButtons.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 153), 5));

        btnContinue.setBackground(new java.awt.Color(255, 255, 255));
        btnContinue.setFont(new java.awt.Font("Arial", 0, 36)); // NOI18N
        btnContinue.setText("Continue");
        btnContinue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnContinueActionPerformed(evt);
            }
        });

        btnBack.setBackground(new java.awt.Color(255, 255, 255));
        btnBack.setFont(new java.awt.Font("Arial", 0, 36)); // NOI18N
        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlButtonsLayout = new javax.swing.GroupLayout(pnlButtons);
        pnlButtons.setLayout(pnlButtonsLayout);
        pnlButtonsLayout.setHorizontalGroup(
            pnlButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlButtonsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(btnBack, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnContinue, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlButtonsLayout.setVerticalGroup(
            pnlButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlButtonsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnContinue, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlBackground.add(pnlButtons);
        pnlButtons.setBounds(500, 270, 280, 219);

        lblBackgroundImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/BrickBackground.png"))); // NOI18N
        pnlBackground.add(lblBackgroundImage);
        lblBackgroundImage.setBounds(0, 0, 800, 600);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlBackground, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlBackground, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * The "Back" button was pressed so go back to the previous screen
     * @param evt "Back" button pressed
     */
    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed

        // Clear the text field
        txtfldName.setText("");
        
        // Go to the Character Selection screen
        GameHandler.changeScreen(GameHandler.SCREEN_ID.CHARACTER_SELECTION);
    }//GEN-LAST:event_btnBackActionPerformed

    /**
     * The "Continue" button was pressed so go to the next screen if all
     * entered values are correct and the user is sure.
     * 
     * @param evt "Continue" button pressed
     */
    private void btnContinueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnContinueActionPerformed
        
        // Get the name entered
        String name = getEnteredName();
        
        if (name.length() > MAX_NAME_LENGTH)
        {
            // The name is too long
            JOptionPane.showMessageDialog(this, "The name you entered is too "
                    + "long, please choose a name that is at "
                    + "most " + MAX_NAME_LENGTH + " characters long.");
            return;
        }
        
        if (name.length() == 0)
        {
            // A name wasn't entered
            JOptionPane.showMessageDialog(this, "Please enter a name.");
            return;
        }
        
        if (availableSkillPoints > 0)
        {
            // Warn the user that they have skill points that they can still use
            int response = JOptionPane.showConfirmDialog(this, "You have unused skill points that will be lost if you proceed. Are you sure you want to continue?", "Leftover skill points", JOptionPane.YES_NO_OPTION);
        
            if (response == JOptionPane.NO_OPTION)
            {
                return;
            }
        }
        
        // Add the new player to the database
        try
        {
            submitUserToDB();
        }
        catch (SQLException ex)
        {
            GameLogger.logError("Unable to submit user to database! " + ex);
            JOptionPane.showMessageDialog(this, "The character could not be added to the database! See logs for details.");
            
            // Don't continue to the next screen
            return;
        }
        
        // Clear the text field
        txtfldName.setText("");
        
        // Go to the Character Main Menu screen
        GameHandler.changeScreen(GameHandler.SCREEN_ID.CHARACTER_MAIN_MENU);
    }//GEN-LAST:event_btnContinueActionPerformed

    /**
     * Decrease the health stat
     * 
     * @param evt Button pressed
     */
    private void btnHealthMinusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHealthMinusActionPerformed
        
        if (health - HEALTH_CHANGE >= MIN_HEALTH)
        {
            // The user is allowed to make this change
            health -= HEALTH_CHANGE;
            availableSkillPoints++;
            updateLabels();
        }
        else
        {
            JOptionPane.showMessageDialog(this, "You cannot decrease your health any further.");
        }
    }//GEN-LAST:event_btnHealthMinusActionPerformed

    /**
     * Increase the health stat
     * 
     * @param evt Button pressed
     */
    private void btnHealthPlusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHealthPlusActionPerformed
        
        if (availableSkillPoints > 0)
        {
            // The user is allowed to make this change
            health += HEALTH_CHANGE;
            availableSkillPoints--;
            updateLabels();
        }
        else
        {
            JOptionPane.showMessageDialog(this, "You do not have any more available skill points.");
        }
    }//GEN-LAST:event_btnHealthPlusActionPerformed

    /**
     * Decrease the damage stat
     * 
     * @param evt Button pressed
     */
    private void btnDamageMinusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDamageMinusActionPerformed
        
        if (damage - DAMAGE_CHANGE >= MIN_DAMAGE)
        {
            // The user is allowed to make this change
            damage -= DAMAGE_CHANGE;
            availableSkillPoints++;
            updateLabels();
        }
        else
        {
            JOptionPane.showMessageDialog(this, "You cannot decrease your damage any further.");
        }
    }//GEN-LAST:event_btnDamageMinusActionPerformed

    /**
     * Increase the damage stat
     * 
     * @param evt Button pressed
     */
    private void btnDamagePlusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDamagePlusActionPerformed
        
        if (availableSkillPoints > 0)
        {
            // The user is allowed to make this change
            damage += DAMAGE_CHANGE;
            availableSkillPoints--;
            updateLabels();
        }
        else
        {
            JOptionPane.showMessageDialog(this, "You do not have any more available skill points.");
        }
    }//GEN-LAST:event_btnDamagePlusActionPerformed

    /**
     * Decrease the fire rate stat
     * 
     * @param evt Button pressed
     */
    private void btnFireRateMinusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFireRateMinusActionPerformed
        
        if (fireRate - FIRE_RATE_CHANGE >= MIN_FIRE_RATE)
        {
            // The user is allowed to make this change
            fireRate -= FIRE_RATE_CHANGE;
            availableSkillPoints++;
            updateLabels();
        }
        else
        {
            JOptionPane.showMessageDialog(this, "You cannot decrease your fire rate any further.");
        }
    }//GEN-LAST:event_btnFireRateMinusActionPerformed

    /**
     * Increase the fire rate stat
     * 
     * @param evt Button pressed
     */
    private void btnFireRatePlusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFireRatePlusActionPerformed
        
        if (availableSkillPoints > 0)
        {
            // The user is allowed to make this change
            fireRate += FIRE_RATE_CHANGE;
            availableSkillPoints--;
            updateLabels();
        }
        else
        {
            JOptionPane.showMessageDialog(this, "You do not have any more available skill points.");
        }
    }//GEN-LAST:event_btnFireRatePlusActionPerformed

    /**
     * Decrease the speed stat
     * 
     * @param evt Button pressed
     */
    private void btnSpeedMinusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSpeedMinusActionPerformed
        
        if (speed - SPEED_CHANGE >= MIN_SPEED)
        {
            // The user is allowed to make this change
            speed -= SPEED_CHANGE;
            availableSkillPoints++;
            updateLabels();
        }
        else
        {
            JOptionPane.showMessageDialog(this, "You cannot decrease your speed any further.");
        }
    }//GEN-LAST:event_btnSpeedMinusActionPerformed

    /**
     * Increase the speed stat
     * 
     * @param evt Button pressed
     */
    private void btnSpeedPlusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSpeedPlusActionPerformed
        
        if (availableSkillPoints > 0)
        {
            // The user is allowed to make this change
            speed += SPEED_CHANGE;
            availableSkillPoints--;
            updateLabels();
        }
        else
        {
            JOptionPane.showMessageDialog(this, "You do not have any more available skill points.");
        }
    }//GEN-LAST:event_btnSpeedPlusActionPerformed

    /**
     * Get the name entered by the user in the text field
     * 
     * @return User-entered name
     */
    private String getEnteredName()
    {
        String result = "";
        
        result = txtfldName.getText();
        
        return result;
    }
    
    /**
     * Add the new, created player to the database
     * 
     * @throws SQLException SQL could not add the new player to the database
     */
    private void submitUserToDB() throws SQLException
    {
        GameLogger.logInfo("Adding user to database.");
        GameHandler.setUser( new User(getEnteredName(), health, damage, fireRate, speed) );
        GameLogger.logInfo("User added to database successfully.");
    }
    
    // *****************************************************
    // PUBLIC METHODS
    // *****************************************************
    
    /**
     * Reset the screen's variables
     */
    public void resetVariables()
    {
        // Reset the variables
        availableSkillPoints = 5;
        health = 20;
        damage = 10;
        fireRate = 10;
        speed = 8;
    }
    
    /**
     * Update the value displayed on the labels
     */
    public void updateLabels()
    {        
        lblCurrentSkillPointsVal.setText("" + availableSkillPoints);
        
        lblCurrentHealth.setText("" + health);
        lblCurrentDamage.setText("" + damage);
        lblCurrentFireRate.setText("" + fireRate);
        lblCurrentSpeed.setText("" + speed);
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnContinue;
    private javax.swing.JButton btnDamageMinus;
    private javax.swing.JButton btnDamagePlus;
    private javax.swing.JButton btnFireRateMinus;
    private javax.swing.JButton btnFireRatePlus;
    private javax.swing.JButton btnHealthMinus;
    private javax.swing.JButton btnHealthPlus;
    private javax.swing.JButton btnSpeedMinus;
    private javax.swing.JButton btnSpeedPlus;
    private javax.swing.JLabel lblBackgroundImage;
    private javax.swing.JLabel lblCurrentDamage;
    private javax.swing.JLabel lblCurrentFireRate;
    private javax.swing.JLabel lblCurrentHealth;
    private javax.swing.JLabel lblCurrentSkillPointsVal;
    private javax.swing.JLabel lblCurrentSpeed;
    private javax.swing.JLabel lblDamage;
    private javax.swing.JLabel lblFireRate;
    private javax.swing.JLabel lblHealth;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblScreenDescription;
    private javax.swing.JLabel lblSkillPoints;
    private javax.swing.JLabel lblSpeed;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JPanel pnlAvailableSkillPoints;
    private javax.swing.JPanel pnlBackground;
    private javax.swing.JPanel pnlButtons;
    private javax.swing.JPanel pnlDamage;
    private javax.swing.JPanel pnlDetails;
    private javax.swing.JPanel pnlFireRate;
    private javax.swing.JPanel pnlHealth;
    private javax.swing.JPanel pnlName;
    private javax.swing.JPanel pnlSpeed;
    private javax.swing.JPanel pnlTitle;
    private javax.swing.JTextField txtfldName;
    // End of variables declaration//GEN-END:variables
}
